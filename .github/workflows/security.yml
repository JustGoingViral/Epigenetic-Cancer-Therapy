name: Security Scan

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety semgrep
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
    
    - name: Run Safety vulnerability scan
      run: |
        safety check --json --output safety-report.json || true
        safety check || true
        
    - name: Run Bandit security scan
      run: |
        bandit -r backend/ -f json -o bandit-report.json || true
        bandit -r backend/ -f txt || true
    
    - name: Run Semgrep security scan
      run: |
        semgrep --config=auto backend/ --json --output semgrep-report.json || true
    
    - name: Run secret detection
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: HIPAA Compliance Check
      run: |
        echo "Checking HIPAA compliance requirements..."
        # Check for PHI in code (basic patterns)
        grep -r -i "ssn\|social.security\|patient.id\|medical.record" backend/ || echo "No obvious PHI patterns found"
        
        # Check for encryption implementations
        grep -r "encrypt\|crypto\|aes\|tls" backend/ || echo "Encryption patterns found"
        
        # Check for logging of sensitive data
        grep -r "log.*password\|log.*token\|log.*key" backend/ && echo "WARNING: Potential logging of sensitive data" || echo "No sensitive data logging found"
    
    - name: Generate Security Report
      run: |
        echo "# Security Scan Report" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        echo "## Vulnerability Summary" >> security-report.md
        echo "- Safety scan completed" >> security-report.md
        echo "- Bandit scan completed" >> security-report.md
        echo "- Semgrep scan completed" >> security-report.md
        echo "- Secret detection completed" >> security-report.md
        echo "- HIPAA compliance check completed" >> security-report.md
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          security-report.md
          safety-report.json
          bandit-report.json
          semgrep-report.json
        retention-days: 30

  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'MTET-Platform'
        path: '.'
        format: 'ALL'
        args: >
          --enableRetired
          --enableExperimental
          --log4jVerbose
    
    - name: Upload Dependency Check results
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: reports/
        retention-days: 30

  docker-security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        if [ -f Dockerfile ]; then
          docker build -t mtet-platform:latest .
        fi
    
    - name: Run Docker security scan
      if: hashFiles('Dockerfile') != ''
      run: |
        # Install Docker security scanning tools
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
        
        # Scan the Docker image
        trivy image --exit-code 0 --no-progress --format table mtet-platform:latest
        trivy image --exit-code 1 --severity HIGH,CRITICAL --no-progress mtet-platform:latest

  hipaa-compliance:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: HIPAA Compliance Audit
      run: |
        echo "Running HIPAA compliance checks..."
        
        # Check for required security documentation
        if [ ! -f SECURITY.md ]; then
          echo "❌ SECURITY.md file missing"
          exit 1
        else
          echo "✅ Security policy documented"
        fi
        
        # Check for encryption in requirements
        if [ -f backend/requirements.txt ]; then
          if grep -q "cryptography\|bcrypt\|argon2" backend/requirements.txt; then
            echo "✅ Encryption libraries present"
          else
            echo "❌ Missing encryption dependencies"
            exit 1
          fi
        else
          echo "⚠️  backend/requirements.txt not found"
        fi
        
        # Check for audit logging
        if [ -d backend/ ]; then
          if grep -r "audit\|log" backend/ | grep -i "access\|login\|auth"; then
            echo "✅ Audit logging implemented"
          else
            echo "⚠️  Audit logging may need review"
          fi
        fi
        
        # Check for secure headers
        if [ -d backend/ ]; then
          if grep -r "Security.*Header\|CSP\|HSTS" backend/; then
            echo "✅ Security headers configured"
          else
            echo "⚠️  Security headers may need review"
          fi
        fi
        
        echo "HIPAA compliance check completed"
